overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/security/resources"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getSourceConnectionInformation
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.authentication.getSourceConnectionInformation(\"server://client-identifier\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/status/sessions"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getSessions
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.sessions.getSessions();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/servers"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getServerList
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getServerList();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/butler"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: stopAllTasks
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.butler.stopAllTasks();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/butler/{taskName}"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: startTask
          source: "import { PlexAPI, TaskName } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.butler.startTask(TaskName.CleanOldBundles);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/home"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getHomeData
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getHomeData();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/{playlistID}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updatePlaylist
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.updatePlaylist(3915);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/metadata/{ratingKey}/children"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getMetadataChildren
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getMetadataChildren(1539.14, \"Stream\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/users/signin"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: data
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.authentication.postUsersSignInData(\"gcgzw5rz2xovp84b4vha3a40\", {\n    login: \"username@email.com\",\n    password: \"password123\",\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/statistics/bandwidth"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getBandwidthStatistics
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.statistics.getBandwidthStatistics(4);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/user"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getUserDetails
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.authentication.getUserDetails(\"CV5xoxjTpFKUzBTShsaf\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/pins"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getPin
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getPin(\"gcgzw5rz2xovp84b4vha3a40\", \"Plex Web\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections/{sectionKey}/{tag}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: items
          source: "import { IncludeGuids, IncludeMeta, PlexAPI, Tag, Type } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getLibraryItems({\n    sectionKey: 9518,\n    tag: Tag.Edition,\n    includeGuids: IncludeGuids.One,\n    includeMeta: IncludeMeta.One,\n    type: Type.Two,\n    xPlexContainerStart: 0,\n    xPlexContainerSize: 50,\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/all/top"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getTopWatchedContent
          source: "import { GetTopWatchedContentQueryParamType, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getTopWatchedContent(GetTopWatchedContentQueryParamType.Two, 1);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createPlaylist
          source: "import { CreatePlaylistQueryParamType, PlexAPI, Smart } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.createPlaylist({\n    title: \"<value>\",\n    type: CreatePlaylistQueryParamType.Photo,\n    smart: Smart.One,\n    uri: \"https://inborn-brochure.biz\",\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/{playlistID}/items"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: addPlaylistContents
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.addPlaylistContents(8502.01, \"server://12345/com.plexapp.plugins.library/library/metadata/1\", 123);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/media/providers"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: providers
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getMediaProviders(\"CV5xoxjTpFKUzBTShsaf\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/hubs/sections/{sectionId}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getLibraryHubs
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.hubs.getLibraryHubs(6728.76);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/hubs/search/voice"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: performVoiceSearch
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.search.performVoiceSearch(\"dead+poop\", 5);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections/{sectionKey}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: details
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getLibraryDetails(9518);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections/watchlist/{filter}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: list
          source: "import { Filter, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.watchlist.getWatchList({\n    filter: Filter.Available,\n    xPlexContainerStart: 0,\n    xPlexContainerSize: 50,\n    xPlexToken: \"CV5xoxjTpFKUzBTShsaf\",\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getServerCapabilities
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getServerCapabilities();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/{playlistID}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deletePlaylist
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.deletePlaylist(216.22);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/butler"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getButlerTasks
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.butler.getButlerTasks();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: libraries
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getAllLibraries();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/log"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: logLine
          source: "import { Level, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.log.logLine(Level.Three, \"Test log message\", \"Postman\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/clients"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getAvailableClients
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getAvailableClients();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/devices"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getDevices
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getDevices();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/photo/:/transcode"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getResizedPhoto
          source: "import { MinSize, PlexAPI, Upscale } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getResizedPhoto({\n    width: 110,\n    height: 165,\n    opacity: 100,\n    blur: 20,\n    minSize: MinSize.One,\n    upscale: Upscale.Zero,\n    url: \"/library/metadata/49564/thumb/1654258204\",\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/metadata/{ratingKey}/thumb"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: image
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.media.getThumbImage({\n    ratingKey: 9518,\n    width: 396,\n    height: 396,\n    minSize: 1,\n    upscale: 1,\n    xPlexToken: \"CV5xoxjTpFKUzBTShsaf\",\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/activities"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getServerActivities
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.activities.getServerActivities();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/{playlistID}/items"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getPlaylistContents
          source: "import { GetPlaylistContentsQueryParamType, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.getPlaylistContents(5004.46, GetPlaylistContentsQueryParamType.Two);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/{playlistID}/items"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: clearPlaylistContents
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.clearPlaylistContents(1893.18);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/statistics/media"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getStatistics
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.statistics.getStatistics(4);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/transcode/sessions"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getTranscodeSessions
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.sessions.getTranscodeSessions();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/updater/apply"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: applyUpdates
          source: "import { PlexAPI, Skip, Tonight } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.updater.applyUpdates(Tonight.One, Skip.One);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getPlaylists
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.getPlaylists();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/statistics/resources"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getResourcesStatistics
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.statistics.getResourcesStatistics(4);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/status/sessions/history/all"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getSessionHistory
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.sessions.getSessionHistory(\"viewedAt:desc\", 1, {}, 12);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/video/:/transcode/universal/start.mpd"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: startUniversalTranscode
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.video.startUniversalTranscode({\n    hasMDE: 1,\n    path: \"/library/metadata/23409\",\n    mediaIndex: 0,\n    partIndex: 0,\n    protocol: \"hls\",\n    fastSeek: 0,\n    directPlay: 0,\n    directStream: 0,\n    subtitleSize: 100,\n    subtites: \"burn\",\n    audioBoost: 100,\n    location: \"lan\",\n    mediaBufferSize: 102400,\n    session: \"zvcage8b7rkioqcm8f4uns4c\",\n    addDebugOverlay: 0,\n    autoAdjustQuality: 0,\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/butler/{taskName}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: stopTask
          source: "import { PathParamTaskName, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.butler.stopTask(PathParamTaskName.BackupDatabase);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/pins/{pinID}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getTokenByPinId
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getTokenByPinId(408895, \"gcgzw5rz2xovp84b4vha3a40\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/hubs/search"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: performSearch
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.search.performSearch(\"arnold\", 5);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/search"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getSearchResults
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.search.getSearchResults(\"110\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/updater/check"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: checkForUpdates
          source: "import { Download, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.updater.checkForUpdates(Download.One);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/identity"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: identity
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getServerIdentity();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/:/scrobble"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: markPlayed
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.media.markPlayed(59398);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/resources"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: resources
          source: "import { IncludeHttps, IncludeIPv6, IncludeRelay, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getServerResources({\n    xPlexToken: \"CV5xoxjTpFKUzBTShsaf\",\n    includeHttps: IncludeHttps.One,\n    includeRelay: IncludeRelay.One,\n    includeIPv6: IncludeIPv6.One,\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections/{sectionKey}/refresh"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: metadata
          source: "import { Force, PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getRefreshLibraryMetadata(9518, Force.One);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/security/token"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getTransientToken
          source: "import { GetTransientTokenQueryParamType, PlexAPI, Scope } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.authentication.getTransientToken(GetTransientTokenQueryParamType.Delegation, Scope.All);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/:/prefs"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getServerPreferences
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getServerPreferences();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/recentlyAdded"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getRecentlyAdded
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getRecentlyAdded(0, 50);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections/{sectionKey}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deleteLibrary
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.deleteLibrary(9518);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/sections/{sectionKey}/search"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: library
          source: "import { PlexAPI, QueryParamType } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getSearchLibrary(9518, QueryParamType.Two);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/log/networked"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: enablePaperTrail
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.log.enablePaperTrail();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/transcode/sessions/{sessionKey}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: stopTranscodeSession
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.sessions.stopTranscodeSession(\"zz7llzqlx8w9vnrsbnwhbmep\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/myplex/account"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getMyPlexAccount
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.server.getMyPlexAccount();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/:/unscrobble"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: markUnplayed
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.media.markUnplayed(59398);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/geoip"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getGeoData
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getGeoData();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/hubs"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getGlobalHubs
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.hubs.getGlobalHubs();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/metadata/{ratingKey}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: key
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getMetaDataByRatingKey(9518);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/:/progress"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updatePlayProgress
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.media.updatePlayProgress(\"<key>\", 90000, \"played\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/onDeck"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getOnDeck
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getOnDeck();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/{playlistID}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getPlaylist
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.getPlaylist(4109.48);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/metadata/{ratingKey}/banner"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: image
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.media.getBannerImage({\n    ratingKey: 9518,\n    width: 396,\n    height: 396,\n    minSize: 1,\n    upscale: 1,\n    xPlexToken: \"CV5xoxjTpFKUzBTShsaf\",\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/friends"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getUserFriends
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getUserFriends();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/log"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: logMultiLine
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.log.logMultiLine(\"level=4&message=Test%20message%201&source=postman\\n\" +\n  \"level=3&message=Test%20message%202&source=postman\\n\" +\n  \"level=1&message=Test%20message%203&source=postman\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/updater/status"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getUpdateStatus
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.updater.getUpdateStatus();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/activities/{activityUUID}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: cancelServerActivities
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.activities.cancelServerActivities(\"25b71ed5-0f9d-461c-baa7-d404e9e10d3e\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/playlists/upload"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: uploadPlaylist
          source: "import { PlexAPI, QueryParamForce } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.playlists.uploadPlaylist(\"/home/barkley/playlist.m3u\", QueryParamForce.Zero);\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/:/timeline"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getTimeline
          source: "import { PlexAPI, State } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.video.getTimeline({\n    ratingKey: 23409,\n    key: \"/library/metadata/23409\",\n    state: State.Playing,\n    hasMDE: 1,\n    time: 2000,\n    duration: 10000,\n    context: \"home:hub.continueWatching\",\n    playQueueItemID: 1,\n    playBackTime: 2000,\n    row: 1,\n  });\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/butler"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: startAllTasks
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.butler.startAllTasks();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/companions"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getCompanionsData
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.plex.getCompanionsData();\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
  - target: $["paths"]["/library/hashes"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getFileHash
          source: "import { PlexAPI } from \"@lukehagar/plexjs\";\n\nconst plexAPI = new PlexAPI({\n  accessToken: \"<YOUR_API_KEY_HERE>\",\n  xPlexClientIdentifier: \"gcgzw5rz2xovp84b4vha3a40\",\n});\n\nasync function run() {\n  const result = await plexAPI.library.getFileHash(\"file://C:\\Image.png&type=13\");\n  \n  // Handle the result\n  console.log(result)\n}\n\nrun();"
