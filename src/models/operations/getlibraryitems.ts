/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RFCDate } from "../../types";
import { z } from "zod";

/**
 * A key representing a specific tag within the section.
 */
export enum Tag {
    All = "all",
    Unwatched = "unwatched",
    Newest = "newest",
    RecentlyAdded = "recentlyAdded",
    RecentlyViewed = "recentlyViewed",
    OnDeck = "onDeck",
    Collection = "collection",
    Edition = "edition",
    Genre = "genre",
    Year = "year",
    Decade = "decade",
    Director = "director",
    Actor = "actor",
    Country = "country",
    ContentRating = "contentRating",
    Rating = "rating",
    Resolution = "resolution",
    FirstCharacter = "firstCharacter",
    Folder = "folder",
}

export type GetLibraryItemsRequest = {
    /**
     * the Id of the library to query
     */
    sectionId: number;
    /**
     * A key representing a specific tag within the section.
     */
    tag: Tag;
};

export type GetLibraryItemsPart = {
    id?: number | undefined;
    key?: string | undefined;
    duration?: number | undefined;
    file?: string | undefined;
    size?: number | undefined;
    container?: string | undefined;
    videoProfile?: string | undefined;
};

export type GetLibraryItemsMedia = {
    id?: number | undefined;
    duration?: number | undefined;
    bitrate?: number | undefined;
    width?: number | undefined;
    height?: number | undefined;
    aspectRatio?: number | undefined;
    audioChannels?: number | undefined;
    audioCodec?: string | undefined;
    videoCodec?: string | undefined;
    videoResolution?: string | undefined;
    container?: string | undefined;
    videoFrameRate?: string | undefined;
    videoProfile?: string | undefined;
    part?: Array<GetLibraryItemsPart> | undefined;
};

export type GetLibraryItemsGenre = {
    tag?: string | undefined;
};

export type GetLibraryItemsCountry = {
    tag?: string | undefined;
};

export type GetLibraryItemsDirector = {
    tag?: string | undefined;
};

export type GetLibraryItemsWriter = {
    tag?: string | undefined;
};

export type GetLibraryItemsRole = {
    tag?: string | undefined;
};

export type GetLibraryItemsMetadata = {
    ratingKey?: string | undefined;
    key?: string | undefined;
    guid?: string | undefined;
    studio?: string | undefined;
    type?: string | undefined;
    title?: string | undefined;
    contentRating?: string | undefined;
    summary?: string | undefined;
    rating?: number | undefined;
    audienceRating?: number | undefined;
    year?: number | undefined;
    tagline?: string | undefined;
    thumb?: string | undefined;
    art?: string | undefined;
    duration?: number | undefined;
    originallyAvailableAt?: RFCDate | undefined;
    addedAt?: number | undefined;
    updatedAt?: number | undefined;
    audienceRatingImage?: string | undefined;
    chapterSource?: string | undefined;
    primaryExtraKey?: string | undefined;
    ratingImage?: string | undefined;
    media?: Array<GetLibraryItemsMedia> | undefined;
    genre?: Array<GetLibraryItemsGenre> | undefined;
    country?: Array<GetLibraryItemsCountry> | undefined;
    director?: Array<GetLibraryItemsDirector> | undefined;
    writer?: Array<GetLibraryItemsWriter> | undefined;
    role?: Array<GetLibraryItemsRole> | undefined;
    titleSort?: string | undefined;
    viewCount?: number | undefined;
    lastViewedAt?: number | undefined;
    originalTitle?: string | undefined;
    viewOffset?: number | undefined;
    skipCount?: number | undefined;
};

export type GetLibraryItemsMediaContainer = {
    size?: number | undefined;
    allowSync?: boolean | undefined;
    art?: string | undefined;
    identifier?: string | undefined;
    librarySectionID?: number | undefined;
    librarySectionTitle?: string | undefined;
    librarySectionUUID?: string | undefined;
    mediaTagPrefix?: string | undefined;
    mediaTagVersion?: number | undefined;
    thumb?: string | undefined;
    title1?: string | undefined;
    title2?: string | undefined;
    viewGroup?: string | undefined;
    viewMode?: number | undefined;
    metadata?: Array<GetLibraryItemsMetadata> | undefined;
};

/**
 * The contents of the library by section and tag
 */
export type GetLibraryItemsResponseBody = {
    mediaContainer?: GetLibraryItemsMediaContainer | undefined;
};

export type GetLibraryItemsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * The contents of the library by section and tag
     */
    object?: GetLibraryItemsResponseBody | undefined;
};

/** @internal */
export const Tag$ = z.nativeEnum(Tag);

/** @internal */
export namespace GetLibraryItemsRequest$ {
    export type Inbound = {
        sectionId: number;
        tag: Tag;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            sectionId: z.number().int(),
            tag: Tag$,
        })
        .transform((v) => {
            return {
                sectionId: v.sectionId,
                tag: v.tag,
            };
        });

    export type Outbound = {
        sectionId: number;
        tag: Tag;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsRequest> = z
        .object({
            sectionId: z.number().int(),
            tag: Tag$,
        })
        .transform((v) => {
            return {
                sectionId: v.sectionId,
                tag: v.tag,
            };
        });
}

/** @internal */
export namespace GetLibraryItemsPart$ {
    export type Inbound = {
        id?: number | undefined;
        key?: string | undefined;
        duration?: number | undefined;
        file?: string | undefined;
        size?: number | undefined;
        container?: string | undefined;
        videoProfile?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsPart, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            key: z.string().optional(),
            duration: z.number().int().optional(),
            file: z.string().optional(),
            size: z.number().int().optional(),
            container: z.string().optional(),
            videoProfile: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.file === undefined ? null : { file: v.file }),
                ...(v.size === undefined ? null : { size: v.size }),
                ...(v.container === undefined ? null : { container: v.container }),
                ...(v.videoProfile === undefined ? null : { videoProfile: v.videoProfile }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        key?: string | undefined;
        duration?: number | undefined;
        file?: string | undefined;
        size?: number | undefined;
        container?: string | undefined;
        videoProfile?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsPart> = z
        .object({
            id: z.number().int().optional(),
            key: z.string().optional(),
            duration: z.number().int().optional(),
            file: z.string().optional(),
            size: z.number().int().optional(),
            container: z.string().optional(),
            videoProfile: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.file === undefined ? null : { file: v.file }),
                ...(v.size === undefined ? null : { size: v.size }),
                ...(v.container === undefined ? null : { container: v.container }),
                ...(v.videoProfile === undefined ? null : { videoProfile: v.videoProfile }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsMedia$ {
    export type Inbound = {
        id?: number | undefined;
        duration?: number | undefined;
        bitrate?: number | undefined;
        width?: number | undefined;
        height?: number | undefined;
        aspectRatio?: number | undefined;
        audioChannels?: number | undefined;
        audioCodec?: string | undefined;
        videoCodec?: string | undefined;
        videoResolution?: string | undefined;
        container?: string | undefined;
        videoFrameRate?: string | undefined;
        videoProfile?: string | undefined;
        Part?: Array<GetLibraryItemsPart$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsMedia, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            duration: z.number().int().optional(),
            bitrate: z.number().int().optional(),
            width: z.number().int().optional(),
            height: z.number().int().optional(),
            aspectRatio: z.number().optional(),
            audioChannels: z.number().int().optional(),
            audioCodec: z.string().optional(),
            videoCodec: z.string().optional(),
            videoResolution: z.string().optional(),
            container: z.string().optional(),
            videoFrameRate: z.string().optional(),
            videoProfile: z.string().optional(),
            Part: z.array(z.lazy(() => GetLibraryItemsPart$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.bitrate === undefined ? null : { bitrate: v.bitrate }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.aspectRatio === undefined ? null : { aspectRatio: v.aspectRatio }),
                ...(v.audioChannels === undefined ? null : { audioChannels: v.audioChannels }),
                ...(v.audioCodec === undefined ? null : { audioCodec: v.audioCodec }),
                ...(v.videoCodec === undefined ? null : { videoCodec: v.videoCodec }),
                ...(v.videoResolution === undefined
                    ? null
                    : { videoResolution: v.videoResolution }),
                ...(v.container === undefined ? null : { container: v.container }),
                ...(v.videoFrameRate === undefined ? null : { videoFrameRate: v.videoFrameRate }),
                ...(v.videoProfile === undefined ? null : { videoProfile: v.videoProfile }),
                ...(v.Part === undefined ? null : { part: v.Part }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        duration?: number | undefined;
        bitrate?: number | undefined;
        width?: number | undefined;
        height?: number | undefined;
        aspectRatio?: number | undefined;
        audioChannels?: number | undefined;
        audioCodec?: string | undefined;
        videoCodec?: string | undefined;
        videoResolution?: string | undefined;
        container?: string | undefined;
        videoFrameRate?: string | undefined;
        videoProfile?: string | undefined;
        Part?: Array<GetLibraryItemsPart$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsMedia> = z
        .object({
            id: z.number().int().optional(),
            duration: z.number().int().optional(),
            bitrate: z.number().int().optional(),
            width: z.number().int().optional(),
            height: z.number().int().optional(),
            aspectRatio: z.number().optional(),
            audioChannels: z.number().int().optional(),
            audioCodec: z.string().optional(),
            videoCodec: z.string().optional(),
            videoResolution: z.string().optional(),
            container: z.string().optional(),
            videoFrameRate: z.string().optional(),
            videoProfile: z.string().optional(),
            part: z.array(z.lazy(() => GetLibraryItemsPart$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.bitrate === undefined ? null : { bitrate: v.bitrate }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.aspectRatio === undefined ? null : { aspectRatio: v.aspectRatio }),
                ...(v.audioChannels === undefined ? null : { audioChannels: v.audioChannels }),
                ...(v.audioCodec === undefined ? null : { audioCodec: v.audioCodec }),
                ...(v.videoCodec === undefined ? null : { videoCodec: v.videoCodec }),
                ...(v.videoResolution === undefined
                    ? null
                    : { videoResolution: v.videoResolution }),
                ...(v.container === undefined ? null : { container: v.container }),
                ...(v.videoFrameRate === undefined ? null : { videoFrameRate: v.videoFrameRate }),
                ...(v.videoProfile === undefined ? null : { videoProfile: v.videoProfile }),
                ...(v.part === undefined ? null : { Part: v.part }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsGenre$ {
    export type Inbound = {
        tag?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsGenre, z.ZodTypeDef, Inbound> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });

    export type Outbound = {
        tag?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsGenre> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsCountry$ {
    export type Inbound = {
        tag?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsCountry, z.ZodTypeDef, Inbound> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });

    export type Outbound = {
        tag?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsCountry> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsDirector$ {
    export type Inbound = {
        tag?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsDirector, z.ZodTypeDef, Inbound> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });

    export type Outbound = {
        tag?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsDirector> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsWriter$ {
    export type Inbound = {
        tag?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsWriter, z.ZodTypeDef, Inbound> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });

    export type Outbound = {
        tag?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsWriter> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsRole$ {
    export type Inbound = {
        tag?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsRole, z.ZodTypeDef, Inbound> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });

    export type Outbound = {
        tag?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsRole> = z
        .object({
            tag: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsMetadata$ {
    export type Inbound = {
        ratingKey?: string | undefined;
        key?: string | undefined;
        guid?: string | undefined;
        studio?: string | undefined;
        type?: string | undefined;
        title?: string | undefined;
        contentRating?: string | undefined;
        summary?: string | undefined;
        rating?: number | undefined;
        audienceRating?: number | undefined;
        year?: number | undefined;
        tagline?: string | undefined;
        thumb?: string | undefined;
        art?: string | undefined;
        duration?: number | undefined;
        originallyAvailableAt?: string | undefined;
        addedAt?: number | undefined;
        updatedAt?: number | undefined;
        audienceRatingImage?: string | undefined;
        chapterSource?: string | undefined;
        primaryExtraKey?: string | undefined;
        ratingImage?: string | undefined;
        Media?: Array<GetLibraryItemsMedia$.Inbound> | undefined;
        Genre?: Array<GetLibraryItemsGenre$.Inbound> | undefined;
        Country?: Array<GetLibraryItemsCountry$.Inbound> | undefined;
        Director?: Array<GetLibraryItemsDirector$.Inbound> | undefined;
        Writer?: Array<GetLibraryItemsWriter$.Inbound> | undefined;
        Role?: Array<GetLibraryItemsRole$.Inbound> | undefined;
        titleSort?: string | undefined;
        viewCount?: number | undefined;
        lastViewedAt?: number | undefined;
        originalTitle?: string | undefined;
        viewOffset?: number | undefined;
        skipCount?: number | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsMetadata, z.ZodTypeDef, Inbound> = z
        .object({
            ratingKey: z.string().optional(),
            key: z.string().optional(),
            guid: z.string().optional(),
            studio: z.string().optional(),
            type: z.string().optional(),
            title: z.string().optional(),
            contentRating: z.string().optional(),
            summary: z.string().optional(),
            rating: z.number().optional(),
            audienceRating: z.number().optional(),
            year: z.number().int().optional(),
            tagline: z.string().optional(),
            thumb: z.string().optional(),
            art: z.string().optional(),
            duration: z.number().int().optional(),
            originallyAvailableAt: z
                .string()
                .transform((v) => new RFCDate(v))
                .optional(),
            addedAt: z.number().int().optional(),
            updatedAt: z.number().int().optional(),
            audienceRatingImage: z.string().optional(),
            chapterSource: z.string().optional(),
            primaryExtraKey: z.string().optional(),
            ratingImage: z.string().optional(),
            Media: z.array(z.lazy(() => GetLibraryItemsMedia$.inboundSchema)).optional(),
            Genre: z.array(z.lazy(() => GetLibraryItemsGenre$.inboundSchema)).optional(),
            Country: z.array(z.lazy(() => GetLibraryItemsCountry$.inboundSchema)).optional(),
            Director: z.array(z.lazy(() => GetLibraryItemsDirector$.inboundSchema)).optional(),
            Writer: z.array(z.lazy(() => GetLibraryItemsWriter$.inboundSchema)).optional(),
            Role: z.array(z.lazy(() => GetLibraryItemsRole$.inboundSchema)).optional(),
            titleSort: z.string().optional(),
            viewCount: z.number().int().optional(),
            lastViewedAt: z.number().int().optional(),
            originalTitle: z.string().optional(),
            viewOffset: z.number().int().optional(),
            skipCount: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.ratingKey === undefined ? null : { ratingKey: v.ratingKey }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.guid === undefined ? null : { guid: v.guid }),
                ...(v.studio === undefined ? null : { studio: v.studio }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.contentRating === undefined ? null : { contentRating: v.contentRating }),
                ...(v.summary === undefined ? null : { summary: v.summary }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.audienceRating === undefined ? null : { audienceRating: v.audienceRating }),
                ...(v.year === undefined ? null : { year: v.year }),
                ...(v.tagline === undefined ? null : { tagline: v.tagline }),
                ...(v.thumb === undefined ? null : { thumb: v.thumb }),
                ...(v.art === undefined ? null : { art: v.art }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.originallyAvailableAt === undefined
                    ? null
                    : { originallyAvailableAt: v.originallyAvailableAt }),
                ...(v.addedAt === undefined ? null : { addedAt: v.addedAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.audienceRatingImage === undefined
                    ? null
                    : { audienceRatingImage: v.audienceRatingImage }),
                ...(v.chapterSource === undefined ? null : { chapterSource: v.chapterSource }),
                ...(v.primaryExtraKey === undefined
                    ? null
                    : { primaryExtraKey: v.primaryExtraKey }),
                ...(v.ratingImage === undefined ? null : { ratingImage: v.ratingImage }),
                ...(v.Media === undefined ? null : { media: v.Media }),
                ...(v.Genre === undefined ? null : { genre: v.Genre }),
                ...(v.Country === undefined ? null : { country: v.Country }),
                ...(v.Director === undefined ? null : { director: v.Director }),
                ...(v.Writer === undefined ? null : { writer: v.Writer }),
                ...(v.Role === undefined ? null : { role: v.Role }),
                ...(v.titleSort === undefined ? null : { titleSort: v.titleSort }),
                ...(v.viewCount === undefined ? null : { viewCount: v.viewCount }),
                ...(v.lastViewedAt === undefined ? null : { lastViewedAt: v.lastViewedAt }),
                ...(v.originalTitle === undefined ? null : { originalTitle: v.originalTitle }),
                ...(v.viewOffset === undefined ? null : { viewOffset: v.viewOffset }),
                ...(v.skipCount === undefined ? null : { skipCount: v.skipCount }),
            };
        });

    export type Outbound = {
        ratingKey?: string | undefined;
        key?: string | undefined;
        guid?: string | undefined;
        studio?: string | undefined;
        type?: string | undefined;
        title?: string | undefined;
        contentRating?: string | undefined;
        summary?: string | undefined;
        rating?: number | undefined;
        audienceRating?: number | undefined;
        year?: number | undefined;
        tagline?: string | undefined;
        thumb?: string | undefined;
        art?: string | undefined;
        duration?: number | undefined;
        originallyAvailableAt?: string | undefined;
        addedAt?: number | undefined;
        updatedAt?: number | undefined;
        audienceRatingImage?: string | undefined;
        chapterSource?: string | undefined;
        primaryExtraKey?: string | undefined;
        ratingImage?: string | undefined;
        Media?: Array<GetLibraryItemsMedia$.Outbound> | undefined;
        Genre?: Array<GetLibraryItemsGenre$.Outbound> | undefined;
        Country?: Array<GetLibraryItemsCountry$.Outbound> | undefined;
        Director?: Array<GetLibraryItemsDirector$.Outbound> | undefined;
        Writer?: Array<GetLibraryItemsWriter$.Outbound> | undefined;
        Role?: Array<GetLibraryItemsRole$.Outbound> | undefined;
        titleSort?: string | undefined;
        viewCount?: number | undefined;
        lastViewedAt?: number | undefined;
        originalTitle?: string | undefined;
        viewOffset?: number | undefined;
        skipCount?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsMetadata> = z
        .object({
            ratingKey: z.string().optional(),
            key: z.string().optional(),
            guid: z.string().optional(),
            studio: z.string().optional(),
            type: z.string().optional(),
            title: z.string().optional(),
            contentRating: z.string().optional(),
            summary: z.string().optional(),
            rating: z.number().optional(),
            audienceRating: z.number().optional(),
            year: z.number().int().optional(),
            tagline: z.string().optional(),
            thumb: z.string().optional(),
            art: z.string().optional(),
            duration: z.number().int().optional(),
            originallyAvailableAt: z
                .instanceof(RFCDate)
                .transform((v) => v.toString())
                .optional(),
            addedAt: z.number().int().optional(),
            updatedAt: z.number().int().optional(),
            audienceRatingImage: z.string().optional(),
            chapterSource: z.string().optional(),
            primaryExtraKey: z.string().optional(),
            ratingImage: z.string().optional(),
            media: z.array(z.lazy(() => GetLibraryItemsMedia$.outboundSchema)).optional(),
            genre: z.array(z.lazy(() => GetLibraryItemsGenre$.outboundSchema)).optional(),
            country: z.array(z.lazy(() => GetLibraryItemsCountry$.outboundSchema)).optional(),
            director: z.array(z.lazy(() => GetLibraryItemsDirector$.outboundSchema)).optional(),
            writer: z.array(z.lazy(() => GetLibraryItemsWriter$.outboundSchema)).optional(),
            role: z.array(z.lazy(() => GetLibraryItemsRole$.outboundSchema)).optional(),
            titleSort: z.string().optional(),
            viewCount: z.number().int().optional(),
            lastViewedAt: z.number().int().optional(),
            originalTitle: z.string().optional(),
            viewOffset: z.number().int().optional(),
            skipCount: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.ratingKey === undefined ? null : { ratingKey: v.ratingKey }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.guid === undefined ? null : { guid: v.guid }),
                ...(v.studio === undefined ? null : { studio: v.studio }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.contentRating === undefined ? null : { contentRating: v.contentRating }),
                ...(v.summary === undefined ? null : { summary: v.summary }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.audienceRating === undefined ? null : { audienceRating: v.audienceRating }),
                ...(v.year === undefined ? null : { year: v.year }),
                ...(v.tagline === undefined ? null : { tagline: v.tagline }),
                ...(v.thumb === undefined ? null : { thumb: v.thumb }),
                ...(v.art === undefined ? null : { art: v.art }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.originallyAvailableAt === undefined
                    ? null
                    : { originallyAvailableAt: v.originallyAvailableAt }),
                ...(v.addedAt === undefined ? null : { addedAt: v.addedAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.audienceRatingImage === undefined
                    ? null
                    : { audienceRatingImage: v.audienceRatingImage }),
                ...(v.chapterSource === undefined ? null : { chapterSource: v.chapterSource }),
                ...(v.primaryExtraKey === undefined
                    ? null
                    : { primaryExtraKey: v.primaryExtraKey }),
                ...(v.ratingImage === undefined ? null : { ratingImage: v.ratingImage }),
                ...(v.media === undefined ? null : { Media: v.media }),
                ...(v.genre === undefined ? null : { Genre: v.genre }),
                ...(v.country === undefined ? null : { Country: v.country }),
                ...(v.director === undefined ? null : { Director: v.director }),
                ...(v.writer === undefined ? null : { Writer: v.writer }),
                ...(v.role === undefined ? null : { Role: v.role }),
                ...(v.titleSort === undefined ? null : { titleSort: v.titleSort }),
                ...(v.viewCount === undefined ? null : { viewCount: v.viewCount }),
                ...(v.lastViewedAt === undefined ? null : { lastViewedAt: v.lastViewedAt }),
                ...(v.originalTitle === undefined ? null : { originalTitle: v.originalTitle }),
                ...(v.viewOffset === undefined ? null : { viewOffset: v.viewOffset }),
                ...(v.skipCount === undefined ? null : { skipCount: v.skipCount }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsMediaContainer$ {
    export type Inbound = {
        size?: number | undefined;
        allowSync?: boolean | undefined;
        art?: string | undefined;
        identifier?: string | undefined;
        librarySectionID?: number | undefined;
        librarySectionTitle?: string | undefined;
        librarySectionUUID?: string | undefined;
        mediaTagPrefix?: string | undefined;
        mediaTagVersion?: number | undefined;
        thumb?: string | undefined;
        title1?: string | undefined;
        title2?: string | undefined;
        viewGroup?: string | undefined;
        viewMode?: number | undefined;
        Metadata?: Array<GetLibraryItemsMetadata$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsMediaContainer, z.ZodTypeDef, Inbound> = z
        .object({
            size: z.number().int().optional(),
            allowSync: z.boolean().optional(),
            art: z.string().optional(),
            identifier: z.string().optional(),
            librarySectionID: z.number().int().optional(),
            librarySectionTitle: z.string().optional(),
            librarySectionUUID: z.string().optional(),
            mediaTagPrefix: z.string().optional(),
            mediaTagVersion: z.number().int().optional(),
            thumb: z.string().optional(),
            title1: z.string().optional(),
            title2: z.string().optional(),
            viewGroup: z.string().optional(),
            viewMode: z.number().int().optional(),
            Metadata: z.array(z.lazy(() => GetLibraryItemsMetadata$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.size === undefined ? null : { size: v.size }),
                ...(v.allowSync === undefined ? null : { allowSync: v.allowSync }),
                ...(v.art === undefined ? null : { art: v.art }),
                ...(v.identifier === undefined ? null : { identifier: v.identifier }),
                ...(v.librarySectionID === undefined
                    ? null
                    : { librarySectionID: v.librarySectionID }),
                ...(v.librarySectionTitle === undefined
                    ? null
                    : { librarySectionTitle: v.librarySectionTitle }),
                ...(v.librarySectionUUID === undefined
                    ? null
                    : { librarySectionUUID: v.librarySectionUUID }),
                ...(v.mediaTagPrefix === undefined ? null : { mediaTagPrefix: v.mediaTagPrefix }),
                ...(v.mediaTagVersion === undefined
                    ? null
                    : { mediaTagVersion: v.mediaTagVersion }),
                ...(v.thumb === undefined ? null : { thumb: v.thumb }),
                ...(v.title1 === undefined ? null : { title1: v.title1 }),
                ...(v.title2 === undefined ? null : { title2: v.title2 }),
                ...(v.viewGroup === undefined ? null : { viewGroup: v.viewGroup }),
                ...(v.viewMode === undefined ? null : { viewMode: v.viewMode }),
                ...(v.Metadata === undefined ? null : { metadata: v.Metadata }),
            };
        });

    export type Outbound = {
        size?: number | undefined;
        allowSync?: boolean | undefined;
        art?: string | undefined;
        identifier?: string | undefined;
        librarySectionID?: number | undefined;
        librarySectionTitle?: string | undefined;
        librarySectionUUID?: string | undefined;
        mediaTagPrefix?: string | undefined;
        mediaTagVersion?: number | undefined;
        thumb?: string | undefined;
        title1?: string | undefined;
        title2?: string | undefined;
        viewGroup?: string | undefined;
        viewMode?: number | undefined;
        Metadata?: Array<GetLibraryItemsMetadata$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsMediaContainer> =
        z
            .object({
                size: z.number().int().optional(),
                allowSync: z.boolean().optional(),
                art: z.string().optional(),
                identifier: z.string().optional(),
                librarySectionID: z.number().int().optional(),
                librarySectionTitle: z.string().optional(),
                librarySectionUUID: z.string().optional(),
                mediaTagPrefix: z.string().optional(),
                mediaTagVersion: z.number().int().optional(),
                thumb: z.string().optional(),
                title1: z.string().optional(),
                title2: z.string().optional(),
                viewGroup: z.string().optional(),
                viewMode: z.number().int().optional(),
                metadata: z.array(z.lazy(() => GetLibraryItemsMetadata$.outboundSchema)).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.size === undefined ? null : { size: v.size }),
                    ...(v.allowSync === undefined ? null : { allowSync: v.allowSync }),
                    ...(v.art === undefined ? null : { art: v.art }),
                    ...(v.identifier === undefined ? null : { identifier: v.identifier }),
                    ...(v.librarySectionID === undefined
                        ? null
                        : { librarySectionID: v.librarySectionID }),
                    ...(v.librarySectionTitle === undefined
                        ? null
                        : { librarySectionTitle: v.librarySectionTitle }),
                    ...(v.librarySectionUUID === undefined
                        ? null
                        : { librarySectionUUID: v.librarySectionUUID }),
                    ...(v.mediaTagPrefix === undefined
                        ? null
                        : { mediaTagPrefix: v.mediaTagPrefix }),
                    ...(v.mediaTagVersion === undefined
                        ? null
                        : { mediaTagVersion: v.mediaTagVersion }),
                    ...(v.thumb === undefined ? null : { thumb: v.thumb }),
                    ...(v.title1 === undefined ? null : { title1: v.title1 }),
                    ...(v.title2 === undefined ? null : { title2: v.title2 }),
                    ...(v.viewGroup === undefined ? null : { viewGroup: v.viewGroup }),
                    ...(v.viewMode === undefined ? null : { viewMode: v.viewMode }),
                    ...(v.metadata === undefined ? null : { Metadata: v.metadata }),
                };
            });
}

/** @internal */
export namespace GetLibraryItemsResponseBody$ {
    export type Inbound = {
        MediaContainer?: GetLibraryItemsMediaContainer$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            MediaContainer: z.lazy(() => GetLibraryItemsMediaContainer$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.MediaContainer === undefined ? null : { mediaContainer: v.MediaContainer }),
            };
        });

    export type Outbound = {
        MediaContainer?: GetLibraryItemsMediaContainer$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsResponseBody> = z
        .object({
            mediaContainer: z.lazy(() => GetLibraryItemsMediaContainer$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.mediaContainer === undefined ? null : { MediaContainer: v.mediaContainer }),
            };
        });
}

/** @internal */
export namespace GetLibraryItemsResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: GetLibraryItemsResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetLibraryItemsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => GetLibraryItemsResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: GetLibraryItemsResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLibraryItemsResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => GetLibraryItemsResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
