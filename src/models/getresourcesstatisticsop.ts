/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import * as z from "zod";

export type GetResourcesStatisticsRequest = {
    /**
     * The timespan to retrieve statistics for
     *
     * @remarks
     * the exact meaning of this parameter is not known
     *
     */
    timespan?: number | undefined;
};

export type GetResourcesStatisticsErrors = {
    code?: number | undefined;
    message?: string | undefined;
    status?: number | undefined;
};

/**
 * Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
 */
export type GetResourcesStatisticsStatisticsResponseBodyData = {
    errors?: Array<GetResourcesStatisticsErrors> | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse?: Response | undefined;
};

/**
 * Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
 */
export class GetResourcesStatisticsStatisticsResponseBody extends Error {
    errors?: Array<GetResourcesStatisticsErrors> | undefined;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse?: Response | undefined;

    /** The original data that was passed to this error instance. */
    data$: GetResourcesStatisticsStatisticsResponseBodyData;

    constructor(err: GetResourcesStatisticsStatisticsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        if (err.errors != null) {
            this.errors = err.errors;
        }
        if (err.rawResponse != null) {
            this.rawResponse = err.rawResponse;
        }

        this.name = "GetResourcesStatisticsStatisticsResponseBody";
    }
}

export type StatisticsResources = {
    timespan?: number | undefined;
    at?: number | undefined;
    hostCpuUtilization?: number | undefined;
    processCpuUtilization?: number | undefined;
    hostMemoryUtilization?: number | undefined;
    processMemoryUtilization?: number | undefined;
};

export type GetResourcesStatisticsMediaContainer = {
    size?: number | undefined;
    statisticsResources?: Array<StatisticsResources> | undefined;
};

/**
 * Resource Statistics
 */
export type GetResourcesStatisticsResponseBody = {
    mediaContainer?: GetResourcesStatisticsMediaContainer | undefined;
};

export type GetResourcesStatisticsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Resource Statistics
     */
    object?: GetResourcesStatisticsResponseBody | undefined;
};

/** @internal */
export const GetResourcesStatisticsRequest$inboundSchema: z.ZodType<
    GetResourcesStatisticsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Timespan: z.number().int().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            Timespan: "timespan",
        });
    });

/** @internal */
export type GetResourcesStatisticsRequest$Outbound = {
    Timespan?: number | undefined;
};

/** @internal */
export const GetResourcesStatisticsRequest$outboundSchema: z.ZodType<
    GetResourcesStatisticsRequest$Outbound,
    z.ZodTypeDef,
    GetResourcesStatisticsRequest
> = z
    .object({
        timespan: z.number().int().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            timespan: "Timespan",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesStatisticsRequest$ {
    /** @deprecated use `GetResourcesStatisticsRequest$inboundSchema` instead. */
    export const inboundSchema = GetResourcesStatisticsRequest$inboundSchema;
    /** @deprecated use `GetResourcesStatisticsRequest$outboundSchema` instead. */
    export const outboundSchema = GetResourcesStatisticsRequest$outboundSchema;
    /** @deprecated use `GetResourcesStatisticsRequest$Outbound` instead. */
    export type Outbound = GetResourcesStatisticsRequest$Outbound;
}

/** @internal */
export const GetResourcesStatisticsErrors$inboundSchema: z.ZodType<
    GetResourcesStatisticsErrors,
    z.ZodTypeDef,
    unknown
> = z.object({
    code: z.number().optional(),
    message: z.string().optional(),
    status: z.number().optional(),
});

/** @internal */
export type GetResourcesStatisticsErrors$Outbound = {
    code?: number | undefined;
    message?: string | undefined;
    status?: number | undefined;
};

/** @internal */
export const GetResourcesStatisticsErrors$outboundSchema: z.ZodType<
    GetResourcesStatisticsErrors$Outbound,
    z.ZodTypeDef,
    GetResourcesStatisticsErrors
> = z.object({
    code: z.number().optional(),
    message: z.string().optional(),
    status: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesStatisticsErrors$ {
    /** @deprecated use `GetResourcesStatisticsErrors$inboundSchema` instead. */
    export const inboundSchema = GetResourcesStatisticsErrors$inboundSchema;
    /** @deprecated use `GetResourcesStatisticsErrors$outboundSchema` instead. */
    export const outboundSchema = GetResourcesStatisticsErrors$outboundSchema;
    /** @deprecated use `GetResourcesStatisticsErrors$Outbound` instead. */
    export type Outbound = GetResourcesStatisticsErrors$Outbound;
}

/** @internal */
export const GetResourcesStatisticsStatisticsResponseBody$inboundSchema: z.ZodType<
    GetResourcesStatisticsStatisticsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        errors: z.array(z.lazy(() => GetResourcesStatisticsErrors$inboundSchema)).optional(),
        RawResponse: z.instanceof(Response).optional(),
    })
    .transform((v) => {
        const remapped = remap$(v, {
            RawResponse: "rawResponse",
        });

        return new GetResourcesStatisticsStatisticsResponseBody(remapped);
    });

/** @internal */
export type GetResourcesStatisticsStatisticsResponseBody$Outbound = {
    errors?: Array<GetResourcesStatisticsErrors$Outbound> | undefined;
    RawResponse?: never | undefined;
};

/** @internal */
export const GetResourcesStatisticsStatisticsResponseBody$outboundSchema: z.ZodType<
    GetResourcesStatisticsStatisticsResponseBody$Outbound,
    z.ZodTypeDef,
    GetResourcesStatisticsStatisticsResponseBody
> = z
    .instanceof(GetResourcesStatisticsStatisticsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z
            .object({
                errors: z
                    .array(z.lazy(() => GetResourcesStatisticsErrors$outboundSchema))
                    .optional(),
                rawResponse: z
                    .instanceof(Response)
                    .transform(() => {
                        throw new Error("Response cannot be serialized");
                    })
                    .optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    rawResponse: "RawResponse",
                });
            })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesStatisticsStatisticsResponseBody$ {
    /** @deprecated use `GetResourcesStatisticsStatisticsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetResourcesStatisticsStatisticsResponseBody$inboundSchema;
    /** @deprecated use `GetResourcesStatisticsStatisticsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetResourcesStatisticsStatisticsResponseBody$outboundSchema;
    /** @deprecated use `GetResourcesStatisticsStatisticsResponseBody$Outbound` instead. */
    export type Outbound = GetResourcesStatisticsStatisticsResponseBody$Outbound;
}

/** @internal */
export const StatisticsResources$inboundSchema: z.ZodType<
    StatisticsResources,
    z.ZodTypeDef,
    unknown
> = z.object({
    timespan: z.number().int().optional(),
    at: z.number().int().optional(),
    hostCpuUtilization: z.number().optional(),
    processCpuUtilization: z.number().optional(),
    hostMemoryUtilization: z.number().optional(),
    processMemoryUtilization: z.number().optional(),
});

/** @internal */
export type StatisticsResources$Outbound = {
    timespan?: number | undefined;
    at?: number | undefined;
    hostCpuUtilization?: number | undefined;
    processCpuUtilization?: number | undefined;
    hostMemoryUtilization?: number | undefined;
    processMemoryUtilization?: number | undefined;
};

/** @internal */
export const StatisticsResources$outboundSchema: z.ZodType<
    StatisticsResources$Outbound,
    z.ZodTypeDef,
    StatisticsResources
> = z.object({
    timespan: z.number().int().optional(),
    at: z.number().int().optional(),
    hostCpuUtilization: z.number().optional(),
    processCpuUtilization: z.number().optional(),
    hostMemoryUtilization: z.number().optional(),
    processMemoryUtilization: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StatisticsResources$ {
    /** @deprecated use `StatisticsResources$inboundSchema` instead. */
    export const inboundSchema = StatisticsResources$inboundSchema;
    /** @deprecated use `StatisticsResources$outboundSchema` instead. */
    export const outboundSchema = StatisticsResources$outboundSchema;
    /** @deprecated use `StatisticsResources$Outbound` instead. */
    export type Outbound = StatisticsResources$Outbound;
}

/** @internal */
export const GetResourcesStatisticsMediaContainer$inboundSchema: z.ZodType<
    GetResourcesStatisticsMediaContainer,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        size: z.number().int().optional(),
        StatisticsResources: z.array(z.lazy(() => StatisticsResources$inboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            StatisticsResources: "statisticsResources",
        });
    });

/** @internal */
export type GetResourcesStatisticsMediaContainer$Outbound = {
    size?: number | undefined;
    StatisticsResources?: Array<StatisticsResources$Outbound> | undefined;
};

/** @internal */
export const GetResourcesStatisticsMediaContainer$outboundSchema: z.ZodType<
    GetResourcesStatisticsMediaContainer$Outbound,
    z.ZodTypeDef,
    GetResourcesStatisticsMediaContainer
> = z
    .object({
        size: z.number().int().optional(),
        statisticsResources: z.array(z.lazy(() => StatisticsResources$outboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            statisticsResources: "StatisticsResources",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesStatisticsMediaContainer$ {
    /** @deprecated use `GetResourcesStatisticsMediaContainer$inboundSchema` instead. */
    export const inboundSchema = GetResourcesStatisticsMediaContainer$inboundSchema;
    /** @deprecated use `GetResourcesStatisticsMediaContainer$outboundSchema` instead. */
    export const outboundSchema = GetResourcesStatisticsMediaContainer$outboundSchema;
    /** @deprecated use `GetResourcesStatisticsMediaContainer$Outbound` instead. */
    export type Outbound = GetResourcesStatisticsMediaContainer$Outbound;
}

/** @internal */
export const GetResourcesStatisticsResponseBody$inboundSchema: z.ZodType<
    GetResourcesStatisticsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        MediaContainer: z.lazy(() => GetResourcesStatisticsMediaContainer$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            MediaContainer: "mediaContainer",
        });
    });

/** @internal */
export type GetResourcesStatisticsResponseBody$Outbound = {
    MediaContainer?: GetResourcesStatisticsMediaContainer$Outbound | undefined;
};

/** @internal */
export const GetResourcesStatisticsResponseBody$outboundSchema: z.ZodType<
    GetResourcesStatisticsResponseBody$Outbound,
    z.ZodTypeDef,
    GetResourcesStatisticsResponseBody
> = z
    .object({
        mediaContainer: z
            .lazy(() => GetResourcesStatisticsMediaContainer$outboundSchema)
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            mediaContainer: "MediaContainer",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesStatisticsResponseBody$ {
    /** @deprecated use `GetResourcesStatisticsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetResourcesStatisticsResponseBody$inboundSchema;
    /** @deprecated use `GetResourcesStatisticsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetResourcesStatisticsResponseBody$outboundSchema;
    /** @deprecated use `GetResourcesStatisticsResponseBody$Outbound` instead. */
    export type Outbound = GetResourcesStatisticsResponseBody$Outbound;
}

/** @internal */
export const GetResourcesStatisticsResponse$inboundSchema: z.ZodType<
    GetResourcesStatisticsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
        object: z.lazy(() => GetResourcesStatisticsResponseBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type GetResourcesStatisticsResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: GetResourcesStatisticsResponseBody$Outbound | undefined;
};

/** @internal */
export const GetResourcesStatisticsResponse$outboundSchema: z.ZodType<
    GetResourcesStatisticsResponse$Outbound,
    z.ZodTypeDef,
    GetResourcesStatisticsResponse
> = z
    .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
        object: z.lazy(() => GetResourcesStatisticsResponseBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesStatisticsResponse$ {
    /** @deprecated use `GetResourcesStatisticsResponse$inboundSchema` instead. */
    export const inboundSchema = GetResourcesStatisticsResponse$inboundSchema;
    /** @deprecated use `GetResourcesStatisticsResponse$outboundSchema` instead. */
    export const outboundSchema = GetResourcesStatisticsResponse$outboundSchema;
    /** @deprecated use `GetResourcesStatisticsResponse$Outbound` instead. */
    export type Outbound = GetResourcesStatisticsResponse$Outbound;
}
