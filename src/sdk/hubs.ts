/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { hubsGetGlobalHubs } from "../funcs/hubsGetGlobalHubs.js";
import { hubsGetLibraryHubs } from "../funcs/hubsGetLibraryHubs.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Hubs extends ClientSDK {
    /**
     * Get Global Hubs
     *
     * @remarks
     * Get Global Hubs filtered by the parameters provided.
     */
    async getGlobalHubs(
        count?: number | undefined,
        onlyTransient?: models.OnlyTransient | undefined,
        options?: RequestOptions
    ): Promise<models.GetGlobalHubsResponse> {
        return unwrapAsync(hubsGetGlobalHubs(this, count, onlyTransient, options));
    }

    /**
     * Get library specific hubs
     *
     * @remarks
     * This endpoint will return a list of library specific hubs
     *
     */
    async getLibraryHubs(
        sectionId: number,
        count?: number | undefined,
        onlyTransient?: models.QueryParamOnlyTransient | undefined,
        options?: RequestOptions
    ): Promise<models.GetLibraryHubsResponse> {
        return unwrapAsync(hubsGetLibraryHubs(this, sectionId, count, onlyTransient, options));
    }
}
