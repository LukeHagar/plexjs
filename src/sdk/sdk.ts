/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { Activities } from "./activities";
import { Butler } from "./butler";
import { Hubs } from "./hubs";
import { Library } from "./library";
import { Log } from "./log";
import { Media } from "./media";
import { Playlists } from "./playlists";
import { Search } from "./search";
import { Security } from "./security";
import { Server } from "./server";
import { Sessions } from "./sessions";
import { Updater } from "./updater";
import { Video } from "./video";

export class SDK extends ClientSDK {
    private readonly options$: SDKOptions;

    constructor(options: SDKOptions = {}) {
        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
        });

        this.options$ = options;
        void this.options$;
    }

    private _server?: Server;
    get server() {
        return (this._server ??= new Server(this.options$));
    }

    private _media?: Media;
    get media() {
        return (this._media ??= new Media(this.options$));
    }

    private _activities?: Activities;
    get activities() {
        return (this._activities ??= new Activities(this.options$));
    }

    private _butler?: Butler;
    get butler() {
        return (this._butler ??= new Butler(this.options$));
    }

    private _hubs?: Hubs;
    get hubs() {
        return (this._hubs ??= new Hubs(this.options$));
    }

    private _search?: Search;
    get search() {
        return (this._search ??= new Search(this.options$));
    }

    private _library?: Library;
    get library() {
        return (this._library ??= new Library(this.options$));
    }

    private _log?: Log;
    get log() {
        return (this._log ??= new Log(this.options$));
    }

    private _playlists?: Playlists;
    get playlists() {
        return (this._playlists ??= new Playlists(this.options$));
    }

    private _security?: Security;
    get security() {
        return (this._security ??= new Security(this.options$));
    }

    private _sessions?: Sessions;
    get sessions() {
        return (this._sessions ??= new Sessions(this.options$));
    }

    private _updater?: Updater;
    get updater() {
        return (this._updater ??= new Updater(this.options$));
    }

    private _video?: Video;
    get video() {
        return (this._video ??= new Video(this.options$));
    }
}
