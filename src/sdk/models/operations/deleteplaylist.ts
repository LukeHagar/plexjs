/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type DeletePlaylistRequest = {
  /**
   * the ID of the playlist
   */
  playlistID: number;
};

export type DeletePlaylistResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const DeletePlaylistRequest$inboundSchema: z.ZodType<
  DeletePlaylistRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  playlistID: z.number(),
});

/** @internal */
export type DeletePlaylistRequest$Outbound = {
  playlistID: number;
};

/** @internal */
export const DeletePlaylistRequest$outboundSchema: z.ZodType<
  DeletePlaylistRequest$Outbound,
  z.ZodTypeDef,
  DeletePlaylistRequest
> = z.object({
  playlistID: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePlaylistRequest$ {
  /** @deprecated use `DeletePlaylistRequest$inboundSchema` instead. */
  export const inboundSchema = DeletePlaylistRequest$inboundSchema;
  /** @deprecated use `DeletePlaylistRequest$outboundSchema` instead. */
  export const outboundSchema = DeletePlaylistRequest$outboundSchema;
  /** @deprecated use `DeletePlaylistRequest$Outbound` instead. */
  export type Outbound = DeletePlaylistRequest$Outbound;
}

/** @internal */
export const DeletePlaylistResponse$inboundSchema: z.ZodType<
  DeletePlaylistResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type DeletePlaylistResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const DeletePlaylistResponse$outboundSchema: z.ZodType<
  DeletePlaylistResponse$Outbound,
  z.ZodTypeDef,
  DeletePlaylistResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePlaylistResponse$ {
  /** @deprecated use `DeletePlaylistResponse$inboundSchema` instead. */
  export const inboundSchema = DeletePlaylistResponse$inboundSchema;
  /** @deprecated use `DeletePlaylistResponse$outboundSchema` instead. */
  export const outboundSchema = DeletePlaylistResponse$outboundSchema;
  /** @deprecated use `DeletePlaylistResponse$Outbound` instead. */
  export type Outbound = DeletePlaylistResponse$Outbound;
}
